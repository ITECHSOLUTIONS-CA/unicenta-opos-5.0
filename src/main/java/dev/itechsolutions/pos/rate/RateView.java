/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package dev.itechsolutions.pos.rate;

import com.openbravo.pos.forms.AppLocal;

import com.openbravo.basic.BasicException;
import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.gui.ComboBoxValModel;
import com.openbravo.data.loader.SentenceList;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.data.user.EditorRecord;
import com.openbravo.format.Formats;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryException;
import dev.itechsolutions.pos.currency.Currency;
import dev.itechsolutions.pos.currency.DataLogicCurrencies;
import dev.itechsolutions.util.TimestampUtil;
import java.awt.Component;
import java.text.MessageFormat;
import java.util.Date;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Argenis Rodr√≠guez
 */
public class RateView extends javax.swing.JPanel implements EditorRecord {
    
    private Object m_oId;
    private DirtyManager m_Dirty;
    private DataLogicCurrencies m_dlCurrencies;
    private DataLogicRate m_dlRate;
    
    private ComboBoxValModel m_currModel;
    private SentenceList m_sentCurrencies;
    
    private AppView appView;
    
    /**
     * Creates new form RateView
     */
    public RateView() {
        initComponents();
    }
    
    public RateView(AppView app, DirtyManager dirty) {
        try {
            appView = app;
            m_dlCurrencies = (DataLogicCurrencies) app.getBean(DataLogicCurrencies.class.getCanonicalName());
            m_dlRate = (DataLogicRate) app.getBean(DataLogicRate.class.getCanonicalName());
            
            initComponents();
            
            m_Dirty = dirty;
            
            m_sentCurrencies = m_dlCurrencies.getAllPS();
            
            m_currModel = new ComboBoxValModel();
            
            jDateFromText.getDocument().addDocumentListener(dirty);
            jRateText.getDocument().addDocumentListener(dirty);
            jCurrencyCombo.addActionListener(dirty);
            
            init();
        } catch (BeanFactoryException e) {
            Logger.getLogger(RateView.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    public void activate() throws BasicException {
        m_currModel = new ComboBoxValModel(m_sentCurrencies.list());
        jCurrencyCombo.setModel(m_currModel);
    }
    
    private void init() {
        writeValueEOF();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateFromText = new javax.swing.JTextField();
        jDate = new javax.swing.JButton();
        jRateLabel = new javax.swing.JLabel();
        jRateText = new javax.swing.JTextField();
        jDateFromLabel = new javax.swing.JLabel();
        jCurrencyLabel = new javax.swing.JLabel();
        jCurrencyCombo = new javax.swing.JComboBox<>();
        jUpdateProductPriceBtn = new javax.swing.JButton();

        jDateFromText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jDateFromText.setToolTipText("");
        jDateFromText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDateFromTextActionPerformed(evt);
            }
        });

        jDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jDate.setToolTipText("");
        jDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDateActionPerformed(evt);
            }
        });

        jRateLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRateLabel.setText(AppLocal.getIntString("label.rate")); // NOI18N

        jRateText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRateText.setToolTipText("");
        jRateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRateTextActionPerformed(evt);
            }
        });

        jDateFromLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jDateFromLabel.setText(AppLocal.getIntString("label.valid.from")); // NOI18N

        jCurrencyLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCurrencyLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/info.png"))); // NOI18N
        jCurrencyLabel.setText(AppLocal.getIntString("label.currency")); // NOI18N

        jCurrencyCombo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCurrencyCombo.setToolTipText("");
        jCurrencyCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCurrencyComboActionPerformed(evt);
            }
        });

        jUpdateProductPriceBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jUpdateProductPriceBtn.setText(AppLocal.getIntString("update.price")); // NOI18N
        jUpdateProductPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateProductPriceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCurrencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateFromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRateText)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateFromText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCurrencyCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jUpdateProductPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCurrencyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jCurrencyCombo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jDateFromLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDateFromText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRateText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jUpdateProductPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jDateFromText.getAccessibleContext().setAccessibleName("jTextValidFrom");
        jDate.getAccessibleContext().setAccessibleName("jButtonDate");
        jRateText.getAccessibleContext().setAccessibleName("jTextRate");
    }// </editor-fold>//GEN-END:initComponents

    private void jDateFromTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDateFromTextActionPerformed
        
    }//GEN-LAST:event_jDateFromTextActionPerformed

    private void jDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDateActionPerformed
        Date date;
        try {
            date = (Date) Formats.DATE.parseValue(jDateFromText.getText());
        } catch (BasicException e) {
            date = TimestampUtil.now();
        }
        date = JCalendarDialog.showCalendarTime(this, date);
        date = TimestampUtil.truncDay(date);
        
        jDateFromText.setText(Formats.DATE.formatValue(date));
    }//GEN-LAST:event_jDateActionPerformed

    private void jRateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRateTextActionPerformed

    private void jCurrencyComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCurrencyComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCurrencyComboActionPerformed

    private void jUpdateProductPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateProductPriceBtnActionPerformed
        try {
            
            if (idIsEmpty())
                return ;
            
            int updates = m_dlRate.updatePriceFromCurrency(createValue());
            String msg = MessageFormat.format(AppLocal.getIntString("price.updated"), updates);
            
            JOptionPane.showMessageDialog(this, msg
                    , "OK", JOptionPane.INFORMATION_MESSAGE);
        } catch (BasicException ex) {
            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jUpdateProductPriceBtnActionPerformed
    
    private boolean idIsEmpty() {
        String id = (String) m_oId;
        return (id == null || id.trim().length() == 0);
    }
    
    @Override
    public void writeValueEOF() {
        m_oId = null;
        jDateFromText.setText(null);
        jRateText.setText(null);
        m_currModel.setSelectedKey(null);
        
        repaint();
        refresh();
    }
    
    @Override
    public void writeValueInsert() {
        m_oId = null;
        jDateFromText.setText(null);
        jRateText.setText(null);
        m_currModel.setSelectedKey(null);
        
        repaint();
        refresh();
    }
    
    @Override
    public void writeValueEdit(Object value) {
        Object[] rate = (Object[]) value;
        
        m_oId = rate[0];
        jRateText.setText(Formats.DOUBLE.formatValue(rate[1]));
        jDateFromText.setText(Formats.DATE.formatValue(rate[2]));
        m_currModel.setSelectedKey(rate[3]);
        
        repaint();
        refresh();
    }
    
    @Override
    public void writeValueDelete(Object value) {
        Object[] rate = (Object[]) value;
        
        m_oId = rate[0];
        
        jRateText.setText(Formats.DOUBLE.formatValue(rate[1]));
        jDateFromText.setText(Formats.DATE.formatValue(rate[2]));
        m_currModel.setSelectedKey(rate[3]);
        
        repaint();
        refresh();
    }
    
    @Override
    public void refresh() {
        
    }
    
    @Override
    public Component getComponent() {
        return this;
    }
    
    @Override
    public Object createValue() throws BasicException {
        
        Object[] rate = new Object[5];
        
        Currency curr = (Currency) m_currModel.getSelectedItem();
        
        rate[0] = m_oId == null ? UUID.randomUUID().toString() : m_oId;
        rate[1] = Formats.DOUBLE.parseValue(jRateText.getText(), 0.0);
        rate[2] = Formats.DATE.parseValue(jDateFromText.getText(), TimestampUtil.now());
        rate[3] = (String) m_currModel.getSelectedKey();
        rate[4] = curr != null ? curr.getIsoCode() : "";
        
        return rate;
    }
    
    public void setAppView(AppView appView) {
        this.appView = appView;
    }
    
    public AppView getAppView() {
        return appView;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCurrencyCombo;
    private javax.swing.JLabel jCurrencyLabel;
    private javax.swing.JButton jDate;
    private javax.swing.JLabel jDateFromLabel;
    private javax.swing.JTextField jDateFromText;
    private javax.swing.JLabel jRateLabel;
    private javax.swing.JTextField jRateText;
    private javax.swing.JButton jUpdateProductPriceBtn;
    // End of variables declaration//GEN-END:variables
}
